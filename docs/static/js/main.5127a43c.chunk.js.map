{"version":3,"sources":["components/AddCategory.js","helpers/getGifts.js","components/GiftGridItems.js","components/GifGrid.js","hooks/useFetchGifts.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","InputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifts","category","a","url","encodeURI","fetch","resp","json","data","gifts","map","img","id","title","images","downsized_medium","GiftGridItems","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifts","key","GiftExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"uMAEaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACZC,mBAAS,IADG,mBACzCC,EADyC,KAC7BC,EAD6B,KAYhD,OACE,0BAAMC,SARa,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,OACxCN,EAAc,OAKd,2BACEO,KAAK,OACLC,MAAOT,EACPU,SAfoB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,Y,uBCLdG,EAAQ,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAChBC,EADgB,0FACyEC,UAC7FH,GAFoB,sBAIHI,MAAMF,GAJH,cAIhBG,EAJgB,gBAKCA,EAAKC,OALN,uBAKdC,EALc,EAKdA,KACFC,EAAQD,EAAKE,KAAI,SAACC,GACtB,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAVf,kBAafM,GAbe,4CAAH,sDCERO,EAAgB,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACzC,OACE,yBAAKc,UAAU,0CACb,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCFGO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDZ,SAACA,GAAc,IAAD,EACfd,mBAAS,CACjCqB,KAAM,GACNa,SAAS,IAH8B,mBAClCC,EADkC,KAC3BC,EAD2B,KAazC,OARAC,qBAAU,WACRxB,EAASC,GAAUwB,MAAK,SAACC,GACvBH,EAAS,CACPf,KAAMkB,EACNL,SAAS,SAGZ,IACIC,EDXmBK,CAAc1B,GAAhCO,EAD+B,EAC/BA,KAAMa,EADyB,EACzBA,QAEd,OACE,oCACE,4BAAKpB,GACJoB,GAAW,yCACZ,yBAAKJ,UAAU,aACZT,EAAKE,KAAI,SAACC,GAAD,OACR,kBAAC,EAAD,eAAeiB,IAAKjB,EAAIC,IAAQD,UET7BkB,EAAgB,WAAO,IAAD,EACG1C,mBAAS,CAAC,WADb,mBAC1B2C,EAD0B,KACd5C,EADc,KAEjC,OACE,oCACE,8CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACA,4BACG4C,EAAWpB,KAAI,SAACT,GAAD,OACd,kBAAC,EAAD,CAAS2B,IAAK3B,EAAUA,SAAUA,U,MCT5C8B,IAASC,OACP,kBAAC,EAAD,MAEAC,SAASC,eAAe,U","file":"static/js/main.5127a43c.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nexport const AddCategory = ({ setCategories }) => {\r\n  const [InputValue, setInputValue] = useState(\"\");\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (InputValue.trim().length > 2) {\r\n      setCategories((cats) => [InputValue, ...cats]);\r\n      setInputValue(\"\");\r\n    }\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        value={InputValue}\r\n        onChange={handleInputChange}\r\n      ></input>\r\n    </form>\r\n  );\r\n};\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n};\r\n","export const getGifts = async (category) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?api_key=M1se6iKSkhyTnXOMpHZbZMKGyPWS9Amx&q=${encodeURI(\r\n    category\r\n  )}&limit=10`;\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();\r\n  const gifts = data.map((img) => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images.downsized_medium.url,\r\n    };\r\n  });\r\n  return gifts;\r\n};\r\n","import React from \"react\";\r\n\r\nexport const GiftGridItems = ({ id, title, url }) => {\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeIn\">\r\n      <img src={url} alt={title} />\r\n      <p>{title}</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useFetchGifts } from \"../hooks/useFetchGifts\";\r\nimport { GiftGridItems } from \"./GiftGridItems\";\r\n\r\nexport const GifGrid = ({ category }) => {\r\n  const { data, loading } = useFetchGifts(category);\r\n\r\n  return (\r\n    <>\r\n      <h3>{category}</h3>\r\n      {loading && <p>Loading...</p>}\r\n      <div className=\"card-grid\">\r\n        {data.map((img) => (\r\n          <GiftGridItems key={img.id} {...img} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifts } from \"../helpers/getGifts\";\r\n\r\nexport const useFetchGifts = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n  useEffect(() => {\r\n    getGifts(category).then((imgs) => {\r\n      setState({\r\n        data: imgs,\r\n        loading: false,\r\n      });\r\n    });\r\n  }, []);\r\n  return state;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\nexport const GiftExpertApp = () => {\r\n  const [categories, setCategories] = useState([\"naruto\"]);\r\n  return (\r\n    <>\r\n      <h2>GiftExpert App</h2>\r\n      <AddCategory setCategories={setCategories} />\r\n      <hr />\r\n      <ol>\r\n        {categories.map((category) => (\r\n          <GifGrid key={category} category={category} />\r\n        ))}\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { GiftExpertApp } from \"./GiftExpertApp\";\nimport \"./index.css\";\nReactDOM.render(\n  <GiftExpertApp />,\n\n  document.getElementById(\"root\")\n);\n//GiftExpertApp\n//\n"],"sourceRoot":""}